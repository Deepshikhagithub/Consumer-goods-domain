# 1.Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region

Select DISTINCT market from dim_customer
where customer="Atliq Exclusive"
 and region="APAC"

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#

# 2. What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields,
unique_products_2020
unique_products_2021
percentage_chg 

WITH UP1 AS (
    SELECT
        COUNT(DISTINCT product_code) AS unique_products_2020
    FROM
        fact_sales_monthly
    WHERE
        fiscal_year = 2020
),
UP2 AS (
    SELECT
        COUNT(DISTINCT product_code) AS unique_products_2021
    FROM
        fact_sales_monthly
    WHERE
        fiscal_year = 2021
)
SELECT
    UP1.unique_products_2020,
    UP2.unique_products_2021,
    ROUND(((UP2.unique_products_2021 - UP1.unique_products_2020) / UP1.unique_products_2020) * 100, 2) AS Percentage_Chg
FROM
    UP1, UP2;

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#

    

# 3. Provide a report with all the unique product counts for each segment and
sort them in descending order of product counts. The final output contains
2 fields,
segment
product_count */


Select Segment,Count(DISTINCT product_code)
AS product_count
from dim_product
Group BY segment
Order By product_count DESC;

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#



# 4. Follow-up: Which segment had the most increase in unique products in
2021 vs 2020? The final output contains these fields,
segment
product_count_2020
product_count_2021
difference */

WITH ProductCounts2020 AS (
    SELECT
        dp.segment,
        COUNT(DISTINCT fsm.product_code) AS product_count
    FROM
        dim_product dp
    JOIN
        fact_sales_monthly fsm ON dp.product_code = fsm.product_code
    WHERE
        fsm.fiscal_year = 2020
    GROUP BY
        dp.segment
),
ProductCounts2021 AS (
    SELECT
        dp.segment,
        COUNT(DISTINCT fsm.product_code) AS product_count
    FROM
        dim_product dp
    JOIN
        fact_sales_monthly fsm ON dp.product_code = fsm.product_code
    WHERE
        fsm.fiscal_year = 2021
    GROUP BY
        dp.segment
),
ProductDifference AS (
    SELECT
        PC20.segment,
        PC20.product_count AS product_count_2020,
        PC21.product_count AS product_count_2021,
        PC21.product_count - PC20.product_count AS difference
    FROM
        ProductCounts2020 PC20
    JOIN
        ProductCounts2021 PC21 ON PC20.segment = PC21.segment
)
SELECT
    *
FROM
    ProductDifference
ORDER BY
    difference DESC;

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#

    

# 5. Get the products that have the highest and lowest manufacturing costs.
The final output should contain these fields,
product_code
product
manufacturing_cost*/

With ProductCosts As(
    Select 
          f.product_code,
          p.product,
          f.manufacturing_cost
	FROM fact_manufacturing_cost f 
    JOIN
        dim_product p ON f.product_code=p.product_code
        )
        Select 
        pc.product_code,
        pc.product,
        pc.manufacturing_cost
        FROM ProductCosts pc
        WHERE
        pc.manufacturing_cost=
        (Select MAX(manufacturing_cost) FROM Productcosts)
        or
        pc.manufacturing_cost=
        (Select MIN(manufacturing_cost) FROM Productcosts)
        ORDER BY 
        pc.manufacturing_cost DESC;

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#

        
        
        
# 6. Generate a report which contains the top 5 customers who received an
average high pre_invoice_discount_pct for the fiscal year 2021 and in the
Indian market. The final output contains these fields,
customer_code
customer
average_discount_percentage */

Select
     f.customer_code,
     c.customer,
     ROUND(AVG(f.pre_invoice_discount_pct) * 100,2)
     AS Average_discount_percentage
     FROM fact_pre_invoice_deductions f 
     JOIN
     dim_customer c ON f.customer_code=c.customer_code
     WHERE fiscal_year =2021
     AND c.market='India'
     Group By f.customer_code,c.customer
     Order By Average_discount_percentage DESC
     LIMIT 5;

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#




# 7. Get the complete report of the Gross sales amount for the customer “Atliq
Exclusive” for each month. This analysis helps to get an idea of low and
high-performing months and take strategic decisions.
The final report contains these columns:
Month
Year
Gross sales Amount */


WITH MonthlySales AS (
    SELECT 
        MONTHNAME(S.DATE) AS Month,
        s.fiscal_year,
        SUM(g.gross_price * s.sold_quantity) AS Gross_sales_amount
    FROM 
        dim_customer c 
    JOIN 
        fact_sales_monthly s ON c.customer_code = s.customer_code
    JOIN 
        fact_gross_price g ON s.product_code = g.product_code
    WHERE 
        c.customer = "Atliq Exclusive"
    GROUP BY 
        MONTHNAME(s.date), fiscal_year
)
SELECT 
    Month,
    fiscal_year,
    ROUND(Gross_sales_amount, 2) AS Gross_sales_amount
FROM 
    MonthlySales
ORDER BY 
    fiscal_year;


# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#


# 8. In which quarter of 2020, got the maximum total_sold_quantity? The final
output contains these fields sorted by the total_sold_quantity,
Quarter
total_sold_quantity */

SELECT
    CASE
        WHEN MONTH(date) IN (9, 10, 11) THEN 'Q1'
        WHEN MONTH(date) IN (12, 1, 2) THEN 'Q2'
        WHEN MONTH(date) IN (3, 4, 5) THEN 'Q3'
        ELSE 'Q4'
    END AS Quarter,
    SUM(sold_quantity) AS total_sold_quantity
FROM
    fact_sales_monthly
WHERE
    fiscal_year = 2020
GROUP BY
    Quarter
ORDER BY
    total_sold_quantity DESC;

# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#



# 9. Which channel helped to bring more gross sales in the fiscal year 2021
and the percentage of contribution? The final output contains these fields,
channel
gross_sales_mln
percentage */

WITH TotalGrossSales AS (
    SELECT
        SUM(fm.sold_quantity * gp.gross_price) AS total_gross_sales
    FROM
        fact_sales_monthly fm
    JOIN
        fact_gross_price gp ON fm.product_code = gp.product_code AND fm.fiscal_year = gp.fiscal_year
    WHERE
        fm.fiscal_year = 2021
)
SELECT
    c.channel,
    ROUND(SUM(fm.sold_quantity * gp.gross_price) / 1000000, 2) AS gross_sales_mln, -- Convert to millions
    ROUND((SUM(fm.sold_quantity * gp.gross_price) / tgs.total_gross_sales) * 100, 2) AS percentage
FROM
    fact_sales_monthly fm
JOIN
    fact_gross_price gp ON fm.product_code = gp.product_code AND fm.fiscal_year = gp.fiscal_year
JOIN
    dim_customer c ON fm.customer_code = c.customer_code
CROSS JOIN
    TotalGrossSales tgs
WHERE
    fm.fiscal_year = 2021
GROUP BY
    c.channel, tgs.total_gross_sales
ORDER BY
    gross_sales_mln DESC;
    
    
WITH cte AS (
    SELECT 
    dc.channel, round(SUM(fg.gross_price*fs.sold_quantity)/100000,2) as gross_sales_mln
    FROM dim_customer as dc
    JOIN fact_sales_monthly as fs ON fs.customer_code = dc.customer_code
    JOIN fact_gross_price fg ON fs.product_code = fg.product_code
    WHERE fs.fiscal_year = 2021
    GROUP BY dc.channel
)
SELECT channel, gross_sales_mln, 
ROUND((gross_sales_mln / (SELECT SUM(gross_sales_mln) FROM cte)) * 100, 2) as percentage
FROM cte
ORDER BY gross_sales_mln DESC


# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#


    

# 10. Get the Top 3 products in each division that have a high
total_sold_quantity in the fiscal_year 2021? The final output contains these
fields,
division
product_code
codebasics.io
product
total_sold_quantity
rank_order */


WITH RankedProducts AS (
    SELECT
        dp.division,
        fsm.product_code,
        dp.product,
        SUM(fsm.sold_quantity) AS total_sold_quantity,
        ROW_NUMBER() OVER(PARTITION BY dp.division ORDER BY SUM(fsm.sold_quantity) DESC) AS rank_order
    FROM
        fact_sales_monthly fsm
    JOIN
        dim_product dp ON fsm.product_code = dp.product_code
    WHERE
        fsm.fiscal_year = 2021
    GROUP BY
        dp.division, fsm.product_code, dp.product
)
SELECT
    division,
    product_code,
    product,
    total_sold_quantity,
    rank_order
FROM
    RankedProducts
WHERE
    rank_order <= 3
ORDER BY
    division, rank_order;
# ----------------------------------------------------------------------------------------------------------------------------------------------------------------------#


